// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication4.Data;

#nullable disable

namespace WebApplication4.Migrations
{
    [DbContext(typeof(FalelungContext))]
    [Migration("20240904113158_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication4.Models.Abhadhi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Abhadhi");
                });

            modelBuilder.Entity("WebApplication4.Models.AgeGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AgeGroup");
                });

            modelBuilder.Entity("WebApplication4.Models.AgricultureDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("AgricultureLand")
                        .HasColumnType("bit");

                    b.Property<string>("AgricultureLandDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("AgricultureProduct")
                        .HasColumnType("bit");

                    b.Property<bool?>("AnimalProduct")
                        .HasColumnType("bit");

                    b.Property<bool?>("CollectionCentre")
                        .HasColumnType("bit");

                    b.Property<bool?>("CoolingCenter")
                        .HasColumnType("bit");

                    b.Property<int>("HouseOwnerDetailId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAnyAnimal")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLandLalPurja")
                        .HasColumnType("bit");

                    b.Property<bool?>("KrishiTathaPasupalanLand")
                        .HasColumnType("bit");

                    b.Property<bool?>("ModernAgriculture")
                        .HasColumnType("bit");

                    b.Property<string>("ModernAgricultureName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModernAgricultureType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PokhariMachapalan")
                        .HasColumnType("bit");

                    b.Property<bool?>("SichaiSubidha")
                        .HasColumnType("bit");

                    b.Property<int?>("WardNo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HouseOwnerDetailId");

                    b.ToTable("AgricultureDetail");
                });

            modelBuilder.Entity("WebApplication4.Models.AgricultureDetailAnimalGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AgricultureDetailId")
                        .HasColumnType("int");

                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AgricultureDetailId");

                    b.HasIndex("AnimalId");

                    b.ToTable("AgricultureDetailAnimalGroup");
                });

            modelBuilder.Entity("WebApplication4.Models.AgriculturePasuPanchiDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AgricultureDetailId")
                        .HasColumnType("int");

                    b.Property<string>("Pariman")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasuPanchi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AgricultureDetailId");

                    b.ToTable("AgriculturePasuPanchiDetail");
                });

            modelBuilder.Entity("WebApplication4.Models.AgricultureProductDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AgricultureDetailId")
                        .HasColumnType("int");

                    b.Property<string>("BaliKoName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pariman")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AgricultureDetailId");

                    b.ToTable("AgricultureProductDetail");
                });

            modelBuilder.Entity("WebApplication4.Models.AgricultureProductQuantity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AgricultureDetailId")
                        .HasColumnType("int");

                    b.Property<string>("Bone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Egg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Meat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Milk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Other")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Skin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Wool")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AgricultureDetailId");

                    b.ToTable("AgricultureProductQuantity");
                });

            modelBuilder.Entity("WebApplication4.Models.Airport", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DistrictId")
                        .HasColumnType("bigint");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("LocalLevelId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("StateId")
                        .HasColumnType("bigint");

                    b.Property<long?>("WardId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("LocalLevelId");

                    b.HasIndex("WardId");

                    b.ToTable("Airport");
                });

            modelBuilder.Entity("WebApplication4.Models.Animal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Animal");
                });

            modelBuilder.Entity("WebApplication4.Models.Atm", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DistrictId")
                        .HasColumnType("bigint");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("LocalLevelId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("StateId")
                        .HasColumnType("bigint");

                    b.Property<long?>("WardId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("LocalLevelId");

                    b.HasIndex("WardId");

                    b.ToTable("Atm");
                });

            modelBuilder.Entity("WebApplication4.Models.AverageMonthlyIncome", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AverageMonthlyIncome");
                });

            modelBuilder.Entity("WebApplication4.Models.BalBibaha", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AayoVaney")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BalBibahaBareyBichar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BalBibahaBareyKehiVannu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("BalBibahaKoBareyThaxa")
                        .HasColumnType("bit");

                    b.Property<string>("BalBibahaKoSamasya")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Bihe5years")
                        .HasColumnType("bit");

                    b.Property<int?>("BiheGardaUmer")
                        .HasColumnType("int");

                    b.Property<string>("BiheKasariVayeko")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("BihePaxadiAdhyan")
                        .HasColumnType("bit");

                    b.Property<bool?>("BihePaxadiPrajanna")
                        .HasColumnType("bit");

                    b.Property<int?>("BuhariKoUmer")
                        .HasColumnType("int");

                    b.Property<string>("ChaVaneyKunTaha")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChainaVaneyKaran")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChoraBiheKatiBarsa")
                        .HasColumnType("int");

                    b.Property<int?>("ChoriBiheKatiBarsa")
                        .HasColumnType("int");

                    b.Property<bool?>("Daijo")
                        .HasColumnType("bit");

                    b.Property<int>("HouseOwnerDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("JwaiKoUmer")
                        .HasColumnType("int");

                    b.Property<string>("KastoPrakarBihe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KatiSamayeSankyukta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KpraptaGarnuVoo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KsamasyaAayo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("OneBarsaBihe")
                        .HasColumnType("bit");

                    b.Property<int?>("Santan")
                        .HasColumnType("int");

                    b.Property<bool?>("UmerNapugiSamasya")
                        .HasColumnType("bit");

                    b.Property<string>("Vayekovaye")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WardNo")
                        .HasColumnType("int");

                    b.Property<string>("YediAayo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("YediSanoUmer")
                        .HasColumnType("bit");

                    b.Property<string>("YediVayeko")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HouseOwnerDetailId");

                    b.ToTable("BalBibaha");
                });

            modelBuilder.Entity("WebApplication4.Models.BloodBank", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BloodBankName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DistrictId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("LocalLevelId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("StateId")
                        .HasColumnType("bigint");

                    b.Property<long?>("WardId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("LocalLevelId");

                    b.HasIndex("WardId");

                    b.ToTable("BloodBank");
                });

            modelBuilder.Entity("WebApplication4.Models.BusinessType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BusinessType");
                });

            modelBuilder.Entity("WebApplication4.Models.Caste", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Caste");
                });

            modelBuilder.Entity("WebApplication4.Models.ChronicDisease", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ChronicDisease");
                });

            modelBuilder.Entity("WebApplication4.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("WebApplication4.Models.Department", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("LocalLevelId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("WebApplication4.Models.Designation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("DepartmentId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Designation");
                });

            modelBuilder.Entity("WebApplication4.Models.DisabilityCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DisabilityCard");
                });

            modelBuilder.Entity("WebApplication4.Models.DisabilityReason", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DisabilityReason");
                });

            modelBuilder.Entity("WebApplication4.Models.DisabilityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DisabilityType");
                });

            modelBuilder.Entity("WebApplication4.Models.District", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("StateId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("StateId");

                    b.ToTable("District");
                });

            modelBuilder.Entity("WebApplication4.Models.DistrictDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Area")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("DistId")
                        .HasColumnType("bigint");

                    b.Property<string>("HeadQuater")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pdensity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Population")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DistId");

                    b.ToTable("DistrictDetail");
                });

            modelBuilder.Entity("WebApplication4.Models.Earthquake2072", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Earthquake2072");
                });

            modelBuilder.Entity("WebApplication4.Models.EconomicDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AverageMonthlyIncomeId")
                        .HasColumnType("int");

                    b.Property<int?>("Female")
                        .HasColumnType("int");

                    b.Property<int>("FoodConditionId")
                        .HasColumnType("int");

                    b.Property<int>("HouseOwnerDetailId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAnyDebt")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHouseRanted")
                        .HasColumnType("bit");

                    b.Property<int?>("KatiJanaSanglagna")
                        .HasColumnType("int");

                    b.Property<int?>("Male")
                        .HasColumnType("int");

                    b.Property<string>("MukhyaPeshaKho")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Other")
                        .HasColumnType("int");

                    b.Property<int>("TechnicalSkillId")
                        .HasColumnType("int");

                    b.Property<int?>("WardNo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AverageMonthlyIncomeId");

                    b.HasIndex("FoodConditionId");

                    b.HasIndex("HouseOwnerDetailId");

                    b.ToTable("EconomicDetail");
                });

            modelBuilder.Entity("WebApplication4.Models.EconomicDetailTechnicalSkillGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EconomicDetailId")
                        .HasColumnType("int");

                    b.Property<int>("Female")
                        .HasColumnType("int");

                    b.Property<int>("Male")
                        .HasColumnType("int");

                    b.Property<int>("Other")
                        .HasColumnType("int");

                    b.Property<int>("TechnicalSkillId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EconomicDetailId");

                    b.HasIndex("TechnicalSkillId");

                    b.ToTable("EconomicDetailTechnicalSkillGroup");
                });

            modelBuilder.Entity("WebApplication4.Models.EducationDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("AnyChild10To19")
                        .HasColumnType("bit");

                    b.Property<bool?>("AnyChild5To14GoingtoSchool")
                        .HasColumnType("bit");

                    b.Property<bool?>("AnyChildHaveNotGoToCollage")
                        .HasColumnType("bit");

                    b.Property<bool?>("AnyKamalariFemale")
                        .HasColumnType("bit");

                    b.Property<bool?>("AnyTorturePhysicalAndMental")
                        .HasColumnType("bit");

                    b.Property<string>("AnyViolenceOccurredYourChild")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("AnyVocationalTraning")
                        .HasColumnType("bit");

                    b.Property<int?>("Child10To19Female")
                        .HasColumnType("int");

                    b.Property<int?>("Child10To19Male")
                        .HasColumnType("int");

                    b.Property<bool?>("HaveFeedIronPillsForFemale")
                        .HasColumnType("bit");

                    b.Property<bool?>("HaveTenagersFemaleTranningAboutHealth")
                        .HasColumnType("bit");

                    b.Property<int>("HouseOwnerDetailId")
                        .HasColumnType("int");

                    b.Property<string>("RegisterCaseAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StayAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VocationalTraningName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WardNo")
                        .HasColumnType("int");

                    b.Property<int?>("WhereAreTheyNowId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HouseOwnerDetailId");

                    b.HasIndex("WhereAreTheyNowId");

                    b.ToTable("EducationDetail");
                });

            modelBuilder.Entity("WebApplication4.Models.EducationDetailSchoolGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EducationId")
                        .HasColumnType("int");

                    b.Property<int>("SchoolLayerId")
                        .HasColumnType("int");

                    b.Property<int>("SchoolTimeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EducationId");

                    b.HasIndex("SchoolLayerId");

                    b.HasIndex("SchoolTimeId");

                    b.ToTable("EducationDetailSchoolGroup");
                });

            modelBuilder.Entity("WebApplication4.Models.EducationEducationalLevelGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EducationId")
                        .HasColumnType("int");

                    b.Property<int>("EducationalLevelId")
                        .HasColumnType("int");

                    b.Property<int>("Female")
                        .HasColumnType("int");

                    b.Property<int>("Male")
                        .HasColumnType("int");

                    b.Property<int>("Other")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EducationId");

                    b.HasIndex("EducationalLevelId");

                    b.ToTable("EducationEducationalLevelGroup");
                });

            modelBuilder.Entity("WebApplication4.Models.EducationalLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EducationalLevel");
                });

            modelBuilder.Entity("WebApplication4.Models.Employee", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("DepartmentId")
                        .HasColumnType("bigint");

                    b.Property<long>("DesignationId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long>("LocalLevelId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("WardId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("DesignationId");

                    b.HasIndex("LocalLevelId");

                    b.HasIndex("WardId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("WebApplication4.Models.FoodCondition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FoodCondition");
                });

            modelBuilder.Entity("WebApplication4.Models.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEng")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Gender");
                });

            modelBuilder.Entity("WebApplication4.Models.GharMuliChildDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BoysCount")
                        .HasColumnType("int");

                    b.Property<int>("GharMuliId")
                        .HasColumnType("int");

                    b.Property<int?>("GirlsCount")
                        .HasColumnType("int");

                    b.Property<bool?>("IranChakkiEat")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("SexEducationKnown")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("GharMuliId");

                    b.ToTable("GharMuliChildDetail");
                });

            modelBuilder.Entity("WebApplication4.Models.GharMuliDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CasteId")
                        .HasColumnType("int");

                    b.Property<string>("ContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("GharKoPhoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GharNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldWardNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReligionId")
                        .HasColumnType("int");

                    b.Property<string>("Village")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("WardId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CasteId");

                    b.HasIndex("GenderId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("ReligionId");

                    b.HasIndex("WardId");

                    b.ToTable("GharMuliDetail");
                });

            modelBuilder.Entity("WebApplication4.Models.GharMuliEconomicStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("AnyOtherIncomeSource")
                        .HasColumnType("bit");

                    b.Property<bool?>("FamilyBusiness")
                        .HasColumnType("bit");

                    b.Property<int?>("FamilyBusinessNo")
                        .HasColumnType("int");

                    b.Property<bool?>("FamilyEmployment")
                        .HasColumnType("bit");

                    b.Property<string>("FamilyEmploymentDuration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FamilyEmploymentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("FamilyProductEnough")
                        .HasColumnType("bit");

                    b.Property<bool?>("FamilyProductQuality")
                        .HasColumnType("bit");

                    b.Property<int>("GharMuliId")
                        .HasColumnType("int");

                    b.Property<string>("IncomeShrotAgriculture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("IncomeYearly")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("OtherIncomeSourceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("OtherIncomeYearly")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("GharMuliId");

                    b.ToTable("GharMuliEconomicStatus");
                });

            modelBuilder.Entity("WebApplication4.Models.GharMuliFamilyDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Dob")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Dobeng")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EducationLevelId")
                        .HasColumnType("int");

                    b.Property<int>("GharMuliId")
                        .HasColumnType("int");

                    b.Property<string>("Height")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsChildDarta")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDisability")
                        .HasColumnType("bit");

                    b.Property<string>("Job")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nata")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Weight")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EducationLevelId");

                    b.HasIndex("GharMuliId");

                    b.ToTable("GharMuliFamilyDetail");
                });

            modelBuilder.Entity("WebApplication4.Models.GharMuliFamilyMarrageDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<int>("GharMuliId")
                        .HasColumnType("int");

                    b.Property<string>("MarrageDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MarrageDateEng")
                        .HasColumnType("datetime2");

                    b.Property<int>("MarrageTimeAge")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GenderId");

                    b.HasIndex("GharMuliId");

                    b.ToTable("GharMuliFamilyMarrageDetail");
                });

            modelBuilder.Entity("WebApplication4.Models.GharMuliHealthDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AnyCasualtiesDuringCovid")
                        .HasColumnType("bit");

                    b.Property<bool>("AnyChildHealthIssue")
                        .HasColumnType("bit");

                    b.Property<bool>("AnyCovidDose")
                        .HasColumnType("bit");

                    b.Property<bool>("AnyDiarrheaIssue")
                        .HasColumnType("bit");

                    b.Property<bool>("AnyHivcase")
                        .HasColumnType("bit");

                    b.Property<bool?>("AnyLadisKamalari")
                        .HasColumnType("bit");

                    b.Property<bool?>("AnyPregnancy")
                        .HasColumnType("bit");

                    b.Property<bool?>("AnySleepMotherInYourHouse")
                        .HasColumnType("bit");

                    b.Property<bool>("AnySunoloPresentDayAama")
                        .HasColumnType("bit");

                    b.Property<bool>("AnyUpToThreeYearAnyMarrage")
                        .HasColumnType("bit");

                    b.Property<bool?>("AnyViolenceInYourFamily")
                        .HasColumnType("bit");

                    b.Property<bool?>("Arvprophylaxis")
                        .HasColumnType("bit");

                    b.Property<int?>("BoysCount")
                        .HasColumnType("int");

                    b.Property<int?>("CasualtiesCount")
                        .HasColumnType("int");

                    b.Property<bool>("Child10To19Ypresent")
                        .HasColumnType("bit");

                    b.Property<string>("ChildAddreee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChildKhopDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ChildSipmulkTalim")
                        .HasColumnType("bit");

                    b.Property<string>("CurrentAddeess")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DiarrheaTimeEatDays")
                        .HasColumnType("int");

                    b.Property<bool?>("DiarrheaTimeEatJinkChaki")
                        .HasColumnType("bit");

                    b.Property<bool?>("DiarrheaTimeEatPunJaliyaJhol")
                        .HasColumnType("bit");

                    b.Property<string>("EatNunType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GharMuliId")
                        .HasColumnType("int");

                    b.Property<int?>("GirlsCounts")
                        .HasColumnType("int");

                    b.Property<string>("HealthIssuColorType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HowManyTimes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Is12YearChild")
                        .HasColumnType("bit");

                    b.Property<bool>("Is16YearChild")
                        .HasColumnType("bit");

                    b.Property<bool>("Is24Mchaild")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsBornChildHivinfected")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsChildAfter1To8EductionStop")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsKhopCard")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNotGoToSchool5To14Child")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsWeighted")
                        .HasColumnType("bit");

                    b.Property<string>("LadisRajashwala")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OneTo5YjukaKhopPatak")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OuterMemberPresentInOurFamily")
                        .HasColumnType("bit");

                    b.Property<bool>("SchoolC23")
                        .HasColumnType("bit");

                    b.Property<string>("SixMto5YbitminAkhopPatak")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("SunoloTimeKahneKuraChalFul")
                        .HasColumnType("bit");

                    b.Property<string>("TalimName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViolenceRegister")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViolenceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeightThau")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GharMuliId");

                    b.ToTable("GharMuliHealthDetail");
                });

            modelBuilder.Entity("WebApplication4.Models.GharMuliKhanePaniAndAawasDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AnimalHouseType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("AnyAnimalForMilkProduce")
                        .HasColumnType("bit");

                    b.Property<bool?>("AnyCooperative")
                        .HasColumnType("bit");

                    b.Property<bool>("AnyDisaster")
                        .HasColumnType("bit");

                    b.Property<bool?>("AnyHouseForAminal")
                        .HasColumnType("bit");

                    b.Property<bool?>("AnyKnowlageOfOrganicMatter")
                        .HasColumnType("bit");

                    b.Property<bool?>("AnyNaturalMedicialKnowlage")
                        .HasColumnType("bit");

                    b.Property<bool?>("AnyRegionalTalim")
                        .HasColumnType("bit");

                    b.Property<string>("AnySuggestions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnySuggestions1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("AnyUseOfChemicalFertilizer")
                        .HasColumnType("bit");

                    b.Property<bool?>("AnyUseOfNaturalSewage")
                        .HasColumnType("bit");

                    b.Property<bool?>("AreYouVisitGovermentOffice")
                        .HasColumnType("bit");

                    b.Property<bool?>("AreYourFamilyEatProperly")
                        .HasColumnType("bit");

                    b.Property<string>("ChemicalFertilizerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConssumeEggCount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConssumeEggsTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ConsumeMilkAndMilkProduct")
                        .HasColumnType("bit");

                    b.Property<string>("CooperativeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisasterType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DrinkingWaterQualityCheck")
                        .HasColumnType("bit");

                    b.Property<string>("DrinkingWaterQualityCheckDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DrinkingWaterQualityCheckTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DrinkingWaterShrot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeedBackForEmployee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeedbackAboutHealthcareEmployee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("FloodDisasterWaterJach")
                        .HasColumnType("bit");

                    b.Property<string>("FloodDisasterjachDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GharMuliId")
                        .HasColumnType("int");

                    b.Property<bool?>("GharayahiKhanePaniRealtedTraning")
                        .HasColumnType("bit");

                    b.Property<string>("HealthCareService")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HouseRentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HowToAvilableFreshVegitable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HowToCookFood")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsBuyFruitsInMarket")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsBuyVegitableInMarket")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsConssumeEggs")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDrinkingWaterAvilable")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsHouseRanted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsKaresabariAvilable")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsUseNaturalMedicial")
                        .HasColumnType("bit");

                    b.Property<string>("KaresabariArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MassuConsumeInKg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MassuCossumeDays")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MassuShrot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MilkAndMilkProductLiter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MilkAndMilkProductMedium")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MilkInLiter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficeService")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SabunPaniLeHandWashBani")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SellMillInLiter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToilatType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToliteCleaningTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("UsedWaterUseForOtherUse")
                        .HasColumnType("bit");

                    b.Property<string>("UsedWaterUseForOtherUseType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("VisitToHealthCare")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("GharMuliId");

                    b.ToTable("GharMuliKhanePaniAndAawasDetail");
                });

            modelBuilder.Entity("WebApplication4.Models.HealthDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("HouseOwnerDetailId")
                        .HasColumnType("int");

                    b.Property<bool>("IsChronicDiseases")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDisabilityFamily")
                        .HasColumnType("bit");

                    b.Property<bool?>("SchoolC23")
                        .HasColumnType("bit");

                    b.Property<string>("UpacharWhere")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WardNo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HouseOwnerDetailId");

                    b.ToTable("HealthDetail");
                });

            modelBuilder.Entity("WebApplication4.Models.HealthDetailChronicDiseaseGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChronicDiseaseId")
                        .HasColumnType("int");

                    b.Property<int>("Female")
                        .HasColumnType("int");

                    b.Property<int>("HealthDetailIid")
                        .HasColumnType("int");

                    b.Property<int>("Male")
                        .HasColumnType("int");

                    b.Property<int>("Other")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChronicDiseaseId");

                    b.HasIndex("HealthDetailIid");

                    b.ToTable("HealthDetailChronicDiseaseGroup");
                });

            modelBuilder.Entity("WebApplication4.Models.HealthDetailDisabilityCardGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisabilityCardId")
                        .HasColumnType("int");

                    b.Property<int>("Female")
                        .HasColumnType("int");

                    b.Property<int>("HealthDetailId")
                        .HasColumnType("int");

                    b.Property<int>("Male")
                        .HasColumnType("int");

                    b.Property<int>("Other")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DisabilityCardId");

                    b.HasIndex("HealthDetailId");

                    b.ToTable("HealthDetailDisabilityCardGroup");
                });

            modelBuilder.Entity("WebApplication4.Models.HealthDetailDisabilityReasonGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisabilityReasonId")
                        .HasColumnType("int");

                    b.Property<int>("Female")
                        .HasColumnType("int");

                    b.Property<int>("HealthDetailId")
                        .HasColumnType("int");

                    b.Property<int>("Male")
                        .HasColumnType("int");

                    b.Property<int>("Other")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DisabilityReasonId");

                    b.HasIndex("HealthDetailId");

                    b.ToTable("HealthDetailDisabilityReasonGroup");
                });

            modelBuilder.Entity("WebApplication4.Models.HealthDetailDisabilityTypeGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisabilityTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Female")
                        .HasColumnType("int");

                    b.Property<int>("HealthDetailId")
                        .HasColumnType("int");

                    b.Property<int>("Male")
                        .HasColumnType("int");

                    b.Property<int>("Other")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DisabilityTypeId");

                    b.HasIndex("HealthDetailId");

                    b.ToTable("HealthDetailDisabilityTypeGroup");
                });

            modelBuilder.Entity("WebApplication4.Models.HealthFacility", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DistrictId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("LocalLevelId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("StateId")
                        .HasColumnType("bigint");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("WardId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("LocalLevelId");

                    b.HasIndex("WardId");

                    b.ToTable("HealthFacility");
                });

            modelBuilder.Entity("WebApplication4.Models.HistoricPlace", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DistrictId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("LocalLevelId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("StateId")
                        .HasColumnType("bigint");

                    b.Property<long?>("WardId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("LocalLevelId");

                    b.ToTable("HistoricPlace");
                });

            modelBuilder.Entity("WebApplication4.Models.Hotel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DistrictId")
                        .HasColumnType("bigint");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("LocalLevelId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("StateId")
                        .HasColumnType("bigint");

                    b.Property<long?>("WardId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("LocalLevelId");

                    b.HasIndex("WardId");

                    b.ToTable("Hotel");
                });

            modelBuilder.Entity("WebApplication4.Models.HouseDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AnySuggestions1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HouseFloorId")
                        .HasColumnType("int");

                    b.Property<int>("HouseMapId")
                        .HasColumnType("int");

                    b.Property<int>("HouseOwnerDetailId")
                        .HasColumnType("int");

                    b.Property<int>("HouseOwnershipId")
                        .HasColumnType("int");

                    b.Property<int>("HouseRoofId")
                        .HasColumnType("int");

                    b.Property<int?>("WardNo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HouseFloorId");

                    b.HasIndex("HouseMapId");

                    b.HasIndex("HouseOwnerDetailId");

                    b.HasIndex("HouseOwnershipId");

                    b.HasIndex("HouseRoofId");

                    b.ToTable("HouseDetail");
                });

            modelBuilder.Entity("WebApplication4.Models.HouseFloor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HouseFloor");
                });

            modelBuilder.Entity("WebApplication4.Models.HouseMapDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HouseMapDetail");
                });

            modelBuilder.Entity("WebApplication4.Models.HouseOwnerAbdhiGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AbhadhiId")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int>("HouseOwnerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AbhadhiId");

                    b.HasIndex("HouseOwnerId");

                    b.ToTable("HouseOwnerAbdhiGroup");
                });

            modelBuilder.Entity("WebApplication4.Models.HouseOwnerCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<int>("HouseOwnerId")
                        .HasColumnType("int");

                    b.Property<long>("LocalLavelId")
                        .HasColumnType("bigint");

                    b.Property<long>("WardId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("HouseOwnerId");

                    b.HasIndex("LocalLavelId");

                    b.HasIndex("WardId");

                    b.ToTable("HouseOwnerCode");
                });

            modelBuilder.Entity("WebApplication4.Models.HouseOwnerCountryGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Count")
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int>("HouseOwnerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("HouseOwnerId");

                    b.ToTable("HouseOwnerCountryGroup");
                });

            modelBuilder.Entity("WebApplication4.Models.HouseOwnerDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("AnyDisablePerson")
                        .HasColumnType("bit");

                    b.Property<bool?>("AnyHasFamilyMemberMoved")
                        .HasColumnType("bit");

                    b.Property<bool?>("AnyJesthaNagarik")
                        .HasColumnType("bit");

                    b.Property<bool?>("AnySingleWomen")
                        .HasColumnType("bit");

                    b.Property<int?>("BusinessTypeId")
                        .HasColumnType("int");

                    b.Property<bool?>("CardLinuVayo")
                        .HasColumnType("bit");

                    b.Property<string>("ChildrenSchoolType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<int?>("Earthquake2072Id")
                        .HasColumnType("int");

                    b.Property<string>("EarthquakeKista")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FemaleDisablePerson")
                        .HasColumnType("int");

                    b.Property<int?>("FemaleFamilyCount")
                        .HasColumnType("int");

                    b.Property<int?>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("GharKoPhoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HouseNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HouseTypeId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsAnyBusiness")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsEarthquakeAnudan")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsLandLalPurja")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsLandOutOfPalika")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNaturalDisasterArea")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsUnEmployedMember")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsVehicle")
                        .HasColumnType("bit");

                    b.Property<string>("KunCardLinuVayo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandAnna")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandOwner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandRopani")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("LocalLevelId")
                        .HasColumnType("bigint");

                    b.Property<int?>("MaleDisablePerson")
                        .HasColumnType("int");

                    b.Property<int?>("MaleFamilyCount")
                        .HasColumnType("int");

                    b.Property<int?>("MarriedMan")
                        .HasColumnType("int");

                    b.Property<int?>("MarriedWoman")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NaturalDisasterId")
                        .HasColumnType("int");

                    b.Property<int?>("OldWardNo")
                        .HasColumnType("int");

                    b.Property<int?>("OtherDisablePerson")
                        .HasColumnType("int");

                    b.Property<int?>("OtherFamilyCount")
                        .HasColumnType("int");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ResidingAbroadCount")
                        .HasColumnType("int");

                    b.Property<int?>("ResidingAbroadFemaleCount")
                        .HasColumnType("int");

                    b.Property<int?>("ResidingAbroadMaleCount")
                        .HasColumnType("int");

                    b.Property<int?>("ResidingAbroadOtherCount")
                        .HasColumnType("int");

                    b.Property<int?>("ResidingCount")
                        .HasColumnType("int");

                    b.Property<int?>("ResidingFemaleCount")
                        .HasColumnType("int");

                    b.Property<int?>("ResidingMaleCount")
                        .HasColumnType("int");

                    b.Property<int?>("ResidingOtherCount")
                        .HasColumnType("int");

                    b.Property<int?>("SeniorCitizensMan")
                        .HasColumnType("int");

                    b.Property<int?>("SeniorCitizensOthers")
                        .HasColumnType("int");

                    b.Property<int?>("SeniorCitizensTotal")
                        .HasColumnType("int");

                    b.Property<int?>("SeniorCitizensWoman")
                        .HasColumnType("int");

                    b.Property<int?>("SingleWomenCount")
                        .HasColumnType("int");

                    b.Property<int?>("SkillTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("TogetherCount")
                        .HasColumnType("int");

                    b.Property<int?>("TogetherFemaleCount")
                        .HasColumnType("int");

                    b.Property<int?>("TogetherMaleCount")
                        .HasColumnType("int");

                    b.Property<int?>("TogetherOtherCount")
                        .HasColumnType("int");

                    b.Property<int?>("TotalDisablePerson")
                        .HasColumnType("int");

                    b.Property<int?>("TotalFamilyCount")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UnMarriedMan")
                        .HasColumnType("int");

                    b.Property<int?>("UnMarriedWoman")
                        .HasColumnType("int");

                    b.Property<int?>("VehicleId")
                        .HasColumnType("int");

                    b.Property<int>("WardNo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessTypeId");

                    b.HasIndex("Earthquake2072Id");

                    b.HasIndex("GenderId");

                    b.HasIndex("HouseTypeId");

                    b.HasIndex("LocalLevelId");

                    b.HasIndex("NaturalDisasterId");

                    b.HasIndex("SkillTypeId");

                    b.HasIndex("VehicleId");

                    b.ToTable("HouseOwnerDetails");
                });

            modelBuilder.Entity("WebApplication4.Models.HouseOwnerFamilyDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Dob")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Dobeng")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EducationLevelId")
                        .HasColumnType("int");

                    b.Property<string>("Height")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HouseOwnerDetailsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsChildDarta")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDisability")
                        .HasColumnType("bit");

                    b.Property<string>("Job")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nata")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Weight")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HouseOwnerDetailsId");

                    b.ToTable("HouseOwnerFamilyDetail");
                });

            modelBuilder.Entity("WebApplication4.Models.HouseOwnership", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HouseOwnership");
                });

            modelBuilder.Entity("WebApplication4.Models.HouseRoof", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HouseRoof");
                });

            modelBuilder.Entity("WebApplication4.Models.HouseType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HouseType");
                });

            modelBuilder.Entity("WebApplication4.Models.HydroPower", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Capacity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DistrictId")
                        .HasColumnType("bigint");

                    b.Property<string>("HydroStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("LocalLevelId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("StateId")
                        .HasColumnType("bigint");

                    b.Property<long?>("WardId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("LocalLevelId");

                    b.HasIndex("WardId");

                    b.ToTable("HydroPower");
                });

            modelBuilder.Entity("WebApplication4.Models.Industry", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DistrictId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("LocalLevelId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("StateId")
                        .HasColumnType("bigint");

                    b.Property<long?>("WardId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("WardId");

                    b.ToTable("Industry");
                });

            modelBuilder.Entity("WebApplication4.Models.Institution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Bank")
                        .HasColumnType("int");

                    b.Property<int?>("CulturalHeritage")
                        .HasColumnType("int");

                    b.Property<int?>("GovernmentOffice")
                        .HasColumnType("int");

                    b.Property<int?>("HealthPost")
                        .HasColumnType("int");

                    b.Property<int?>("Industry")
                        .HasColumnType("int");

                    b.Property<int?>("NaturalResource")
                        .HasColumnType("int");

                    b.Property<int?>("School")
                        .HasColumnType("int");

                    b.Property<int?>("SecurityAgencies")
                        .HasColumnType("int");

                    b.Property<int?>("TownWardOffice")
                        .HasColumnType("int");

                    b.Property<long>("WardNo")
                        .HasColumnType("bigint");

                    b.Property<long>("WardNoNavigationId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("WardNoNavigationId");

                    b.ToTable("Institution");
                });

            modelBuilder.Entity("WebApplication4.Models.JanPratinidhi", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Desiganation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("LocalLevelId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("WardId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("LocalLevelId");

                    b.HasIndex("WardId");

                    b.ToTable("JanPratinidhi");
                });

            modelBuilder.Entity("WebApplication4.Models.KaryalayaSetup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("DistrictId")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PalikaId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProvinceId")
                        .HasColumnType("bigint");

                    b.Property<int>("Wardno")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.HasIndex("PalikaId");

                    b.HasIndex("ProvinceId");

                    b.ToTable("KaryalayaSetup");
                });

            modelBuilder.Entity("WebApplication4.Models.Lake", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DistrictId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("LocalLevelId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("StateId")
                        .HasColumnType("bigint");

                    b.Property<long?>("WardId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("LocalLevelId");

                    b.HasIndex("WardId");

                    b.ToTable("Lake");
                });

            modelBuilder.Entity("WebApplication4.Models.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Language");
                });

            modelBuilder.Entity("WebApplication4.Models.LocalLevel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("DistId")
                        .HasColumnType("bigint");

                    b.Property<int?>("MaxWardNo")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DistId");

                    b.ToTable("LocalLevel");
                });

            modelBuilder.Entity("WebApplication4.Models.LocalLevelDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Area")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Density")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("LocalLevelId")
                        .HasColumnType("bigint");

                    b.Property<string>("Population")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LocalLevelId");

                    b.ToTable("LocalLevelDetail");
                });

            modelBuilder.Entity("WebApplication4.Models.Ministry", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GovermentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MinisterEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MinisterName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MinisterPhoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("StateId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("StateId");

                    b.ToTable("Ministry");
                });

            modelBuilder.Entity("WebApplication4.Models.Mountain", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DistrictId")
                        .HasColumnType("bigint");

                    b.Property<string>("Height")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("LocalLevelId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("StateId")
                        .HasColumnType("bigint");

                    b.Property<long?>("WardId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("LocalLevelId");

                    b.HasIndex("WardId");

                    b.ToTable("Mountain");
                });

            modelBuilder.Entity("WebApplication4.Models.MovedFamilyMemberDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HouseOwnerDetailsId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Total")
                        .HasColumnType("int");

                    b.Property<int?>("TotalFemale")
                        .HasColumnType("int");

                    b.Property<int?>("TotalMale")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HouseOwnerDetailsId");

                    b.ToTable("MovedFamilyMemberDetail");
                });

            modelBuilder.Entity("WebApplication4.Models.MultisectoralNutritionAndExtension", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AnimalHouseType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("AnyAnimalForMilkProduce")
                        .HasColumnType("bit");

                    b.Property<bool?>("AnyCasualtiesDuringCovid")
                        .HasColumnType("bit");

                    b.Property<bool?>("AnyChildHealthIssue")
                        .HasColumnType("bit");

                    b.Property<bool?>("AnyCooperative")
                        .HasColumnType("bit");

                    b.Property<bool?>("AnyCovidDose")
                        .HasColumnType("bit");

                    b.Property<bool?>("AnyDiarrheaIssue")
                        .HasColumnType("bit");

                    b.Property<bool?>("AnyDisaster")
                        .HasColumnType("bit");

                    b.Property<bool?>("AnyHivcase")
                        .HasColumnType("bit");

                    b.Property<bool?>("AnyHouseForAminal")
                        .HasColumnType("bit");

                    b.Property<bool?>("AnyKnowlageOfOrganicMatter")
                        .HasColumnType("bit");

                    b.Property<bool?>("AnyLadisKamalari")
                        .HasColumnType("bit");

                    b.Property<bool?>("AnyNaturalMedicialKnowlage")
                        .HasColumnType("bit");

                    b.Property<bool?>("AnyOtherIncomeSource")
                        .HasColumnType("bit");

                    b.Property<bool?>("AnyPregnancy")
                        .HasColumnType("bit");

                    b.Property<bool?>("AnyRegionalTalim")
                        .HasColumnType("bit");

                    b.Property<bool?>("AnySleepMotherInYourHouse")
                        .HasColumnType("bit");

                    b.Property<string>("AnySuggestions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnySuggestions1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("AnySunoloPresentDayAama")
                        .HasColumnType("bit");

                    b.Property<bool?>("AnyUpToThreeYearAnyMarrage")
                        .HasColumnType("bit");

                    b.Property<bool?>("AnyUseOfChemicalFertilizer")
                        .HasColumnType("bit");

                    b.Property<bool?>("AnyUseOfNaturalSewage")
                        .HasColumnType("bit");

                    b.Property<bool?>("AnyViolenceInYourFamily")
                        .HasColumnType("bit");

                    b.Property<bool?>("AreYouVisitGovermentOffice")
                        .HasColumnType("bit");

                    b.Property<bool?>("AreYourFamilyEatProperly")
                        .HasColumnType("bit");

                    b.Property<bool?>("Arvprophylaxis")
                        .HasColumnType("bit");

                    b.Property<int?>("BoysCount")
                        .HasColumnType("int");

                    b.Property<int?>("CasualtiesCount")
                        .HasColumnType("int");

                    b.Property<string>("ChemicalFertilizerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Child10To19Ypresent")
                        .HasColumnType("bit");

                    b.Property<string>("ChildAddreee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChildKhopDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ChildSipmulkTalim")
                        .HasColumnType("bit");

                    b.Property<string>("ConssumeEggCount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConssumeEggsTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ConsumeMilkAndMilkProduct")
                        .HasColumnType("bit");

                    b.Property<string>("CooperativeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentAddeess")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DiarrheaTimeEatDays")
                        .HasColumnType("int");

                    b.Property<bool?>("DiarrheaTimeEatJinkChaki")
                        .HasColumnType("bit");

                    b.Property<bool?>("DiarrheaTimeEatPunJaliyaJhol")
                        .HasColumnType("bit");

                    b.Property<string>("DisasterType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DrinkingWaterQualityCheck")
                        .HasColumnType("bit");

                    b.Property<string>("DrinkingWaterQualityCheckDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DrinkingWaterQualityCheckTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DrinkingWaterShrot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EatNunType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("FamilyBusiness")
                        .HasColumnType("bit");

                    b.Property<int?>("FamilyBusinessNo")
                        .HasColumnType("int");

                    b.Property<bool?>("FamilyEmployment")
                        .HasColumnType("bit");

                    b.Property<string>("FamilyEmploymentDuration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FamilyEmploymentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("FamilyProductEnough")
                        .HasColumnType("bit");

                    b.Property<bool?>("FamilyProductQuality")
                        .HasColumnType("bit");

                    b.Property<string>("FeedBackForEmployee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeedbackAboutHealthcareEmployee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("FloodDisasterWaterJach")
                        .HasColumnType("bit");

                    b.Property<string>("FloodDisasterjachDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("GharayahiKhanePaniRealtedTraning")
                        .HasColumnType("bit");

                    b.Property<int?>("GirlsCounts")
                        .HasColumnType("int");

                    b.Property<string>("HealthCareService")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HealthIssuColorType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HouseOwnerDetailId")
                        .HasColumnType("int");

                    b.Property<string>("HouseRentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HowManyTimes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HowToAvilableFreshVegitable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HowToCookFood")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncomeShrotAgriculture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncomeYearly")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Is12YearChild")
                        .HasColumnType("bit");

                    b.Property<bool?>("Is16YearChild")
                        .HasColumnType("bit");

                    b.Property<bool?>("Is24Mchaild")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsBornChildHivinfected")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsBuyFruitsInMarket")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsBuyVegitableInMarket")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsChildAfter1To8EductionStop")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsConssumeEggs")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDrinkingWaterAvilable")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsHouseRanted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsKaresabariAvilable")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsKhopCard")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotGoToSchool5To14Child")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsUseNaturalMedicial")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsWeighted")
                        .HasColumnType("bit");

                    b.Property<string>("KaresabariArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LadisRajashwala")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MassuConsumeInKg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MassuCossumeDays")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MassuShrot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MilkAndMilkProductLiter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MilkAndMilkProductMedium")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MilkInLiter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficeService")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OneTo5YjukaKhopPatak")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherIncomeSourceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherIncomeYearly")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("OuterMemberPresentInOurFamily")
                        .HasColumnType("bit");

                    b.Property<string>("SabunPaniLeHandWashBani")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("SchoolC23")
                        .HasColumnType("bit");

                    b.Property<string>("SellMillInLiter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SixMto5YbitminAkhopPatak")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("SunoloTimeKahneKuraChalFul")
                        .HasColumnType("bit");

                    b.Property<string>("TalimName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThapKhanaKhuwaunu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToilatType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToliteCleaningTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpacharWhere")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("UsedWaterUseForOtherUse")
                        .HasColumnType("bit");

                    b.Property<string>("UsedWaterUseForOtherUseType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViolenceRegister")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViolenceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("VisitToHealthCare")
                        .HasColumnType("bit");

                    b.Property<string>("WeightThau")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HouseOwnerDetailId");

                    b.ToTable("MultisectoralNutritionAndExtension");
                });

            modelBuilder.Entity("WebApplication4.Models.NagarikWadaPatra", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Charge")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("LocalLevelId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Process")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeRequired")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LocalLevelId");

                    b.ToTable("NagarikWadaPatra");
                });

            modelBuilder.Entity("WebApplication4.Models.NagarikWadaPatraDoc", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("NagarikWadaPatraId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NagarikWadaPatraId");

                    b.ToTable("NagarikWadaPatraDoc");
                });

            modelBuilder.Entity("WebApplication4.Models.NaturalDisaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NaturalDisaster");
                });

            modelBuilder.Entity("WebApplication4.Models.Notice", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("LocalLevelId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LocalLevelId");

                    b.ToTable("Notice");
                });

            modelBuilder.Entity("WebApplication4.Models.OccupationDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OccupationDetail");
                });

            modelBuilder.Entity("WebApplication4.Models.PoliceStation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DistrictId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("LocalLevelId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("StateId")
                        .HasColumnType("bigint");

                    b.Property<long?>("WardId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("LocalLevelId");

                    b.HasIndex("WardId");

                    b.ToTable("PoliceStation");
                });

            modelBuilder.Entity("WebApplication4.Models.PopulationDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("HouseOwnerDetailId")
                        .HasColumnType("int");

                    b.Property<bool>("IsBusinessSkill")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMarried")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<int>("ReligionId")
                        .HasColumnType("int");

                    b.Property<int?>("WardNo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("ReligionId");

                    b.ToTable("PopulationDetail");
                });

            modelBuilder.Entity("WebApplication4.Models.PopulationDetailAgeGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AgeGroupId")
                        .HasColumnType("int");

                    b.Property<int>("Female")
                        .HasColumnType("int");

                    b.Property<int>("Male")
                        .HasColumnType("int");

                    b.Property<int>("Other")
                        .HasColumnType("int");

                    b.Property<int>("PopulationDetailId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AgeGroupId");

                    b.HasIndex("PopulationDetailId");

                    b.ToTable("PopulationDetailAgeGroup");
                });

            modelBuilder.Entity("WebApplication4.Models.PopulationDetailCasteGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CasteId")
                        .HasColumnType("int");

                    b.Property<int>("Female")
                        .HasColumnType("int");

                    b.Property<int>("Male")
                        .HasColumnType("int");

                    b.Property<int>("Other")
                        .HasColumnType("int");

                    b.Property<int>("PopulationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CasteId");

                    b.HasIndex("PopulationId");

                    b.ToTable("PopulationDetailCasteGroup");
                });

            modelBuilder.Entity("WebApplication4.Models.PopulationDetailOccupationGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Female")
                        .HasColumnType("int");

                    b.Property<int>("Male")
                        .HasColumnType("int");

                    b.Property<int>("OccupationDetailId")
                        .HasColumnType("int");

                    b.Property<int>("Other")
                        .HasColumnType("int");

                    b.Property<int>("PopulationDetailId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OccupationDetailId");

                    b.HasIndex("PopulationDetailId");

                    b.ToTable("PopulationDetailOccupationGroup");
                });

            modelBuilder.Entity("WebApplication4.Models.PregnancyDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AmmaKoNam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarvPrachianPatak")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GarvRaheKoPatak")
                        .HasColumnType("int");

                    b.Property<int>("GharMuliId")
                        .HasColumnType("int");

                    b.Property<string>("Ttkhopa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhatDoUeat")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GharMuliId");

                    b.ToTable("PregnancyDetail");
                });

            modelBuilder.Entity("WebApplication4.Models.Project", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AcceptedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BenefitFamilyNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Budget")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommitteeHeadName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommitteeHeadPhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommitteeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompletionDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("LocalLevelId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PercentageOfWorkDone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThekdarName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThekdarPhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("WardId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("LocalLevelId");

                    b.HasIndex("WardId");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("WebApplication4.Models.ProtectedArea", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Area")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DistrictId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("LocalLevelId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("StateId")
                        .HasColumnType("bigint");

                    b.Property<long?>("WardId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("LocalLevelId");

                    b.HasIndex("WardId");

                    b.ToTable("ProtectedArea");
                });

            modelBuilder.Entity("WebApplication4.Models.Religion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Religion");
                });

            modelBuilder.Entity("WebApplication4.Models.SchoolLayer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SchoolLayer");
                });

            modelBuilder.Entity("WebApplication4.Models.SchoolTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SchoolTime");
                });

            modelBuilder.Entity("WebApplication4.Models.Sikshya", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("DistrictId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("LocalLevelId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("StateId")
                        .HasColumnType("bigint");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("WardId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.HasIndex("LocalLevelId");

                    b.HasIndex("StateId");

                    b.HasIndex("WardId");

                    b.ToTable("Sikshya");
                });

            modelBuilder.Entity("WebApplication4.Models.SkillType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SkillType");
                });

            modelBuilder.Entity("WebApplication4.Models.SleepMotherDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AfterSixMonth")
                        .HasColumnType("bit");

                    b.Property<string>("ChildWeight")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GharMuliId")
                        .HasColumnType("int");

                    b.Property<string>("IranChakkiDays")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSixMonthCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSixMonthEatMotherMilk")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrasutiAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrasutiJach")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThapKhanaKoNam")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GharMuliId");

                    b.ToTable("SleepMotherDetail");
                });

            modelBuilder.Entity("WebApplication4.Models.State", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("State");
                });

            modelBuilder.Entity("WebApplication4.Models.StateDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Area")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Capital")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChiefMinister")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Governer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pdensity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Population")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("StateId")
                        .HasColumnType("bigint");

                    b.Property<int?>("TotalDist")
                        .HasColumnType("int");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StateId");

                    b.ToTable("StateDetail");
                });

            modelBuilder.Entity("WebApplication4.Models.TechnicalSkill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TechnicalSkill");
                });

            modelBuilder.Entity("WebApplication4.Models.UserDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("DistrictId")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("LocalLevel")
                        .HasColumnType("bigint");

                    b.Property<long>("LocalLevelNavigationId")
                        .HasColumnType("bigint");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("StateId")
                        .HasColumnType("bigint");

                    b.Property<long?>("WardId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.HasIndex("LocalLevelNavigationId");

                    b.HasIndex("StateId");

                    b.HasIndex("WardId");

                    b.ToTable("UserDetail");
                });

            modelBuilder.Entity("WebApplication4.Models.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vehicle");
                });

            modelBuilder.Entity("WebApplication4.Models.Ward", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("LocalLevelId")
                        .HasColumnType("bigint");

                    b.Property<long?>("WardNo")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("LocalLevelId");

                    b.ToTable("Ward");
                });

            modelBuilder.Entity("WebApplication4.Models.WardDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Area")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Density")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Popullation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("WardId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("WardId");

                    b.ToTable("WardDetail");
                });

            modelBuilder.Entity("WebApplication4.Models.WaterFall", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DistrictId")
                        .HasColumnType("bigint");

                    b.Property<string>("Height")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("LocalLevelId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("StateId")
                        .HasColumnType("bigint");

                    b.Property<long?>("WardId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("LocalLevelId");

                    b.HasIndex("WardId");

                    b.ToTable("WaterFall");
                });

            modelBuilder.Entity("WebApplication4.Models.WhereAreTheyNow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderByData")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("WhereAreTheyNow");
                });

            modelBuilder.Entity("WebApplication4.Models.WhereAreTheyNowDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("FemaleCount")
                        .HasColumnType("int");

                    b.Property<int>("HouseOwnerDetailsId")
                        .HasColumnType("int");

                    b.Property<int?>("MaleCount")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WhereAreTheyNowId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HouseOwnerDetailsId");

                    b.HasIndex("WhereAreTheyNowId");

                    b.ToTable("WhereAreTheyNowDetail");
                });

            modelBuilder.Entity("WebApplication4.Models.AgricultureDetail", b =>
                {
                    b.HasOne("WebApplication4.Models.HouseOwnerDetail", "HouseOwnerDetail")
                        .WithMany("AgricultureDetails")
                        .HasForeignKey("HouseOwnerDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HouseOwnerDetail");
                });

            modelBuilder.Entity("WebApplication4.Models.AgricultureDetailAnimalGroup", b =>
                {
                    b.HasOne("WebApplication4.Models.AgricultureDetail", "AgricultureDetail")
                        .WithMany("AgricultureDetailAnimalGroups")
                        .HasForeignKey("AgricultureDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.Animal", "Animal")
                        .WithMany("AgricultureDetailAnimalGroups")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AgricultureDetail");

                    b.Navigation("Animal");
                });

            modelBuilder.Entity("WebApplication4.Models.AgriculturePasuPanchiDetail", b =>
                {
                    b.HasOne("WebApplication4.Models.AgricultureDetail", "AgricultureDetail")
                        .WithMany("AgriculturePasuPanchiDetails")
                        .HasForeignKey("AgricultureDetailId");

                    b.Navigation("AgricultureDetail");
                });

            modelBuilder.Entity("WebApplication4.Models.AgricultureProductDetail", b =>
                {
                    b.HasOne("WebApplication4.Models.AgricultureDetail", "AgricultureDetail")
                        .WithMany("AgricultureProductDetails")
                        .HasForeignKey("AgricultureDetailId");

                    b.Navigation("AgricultureDetail");
                });

            modelBuilder.Entity("WebApplication4.Models.AgricultureProductQuantity", b =>
                {
                    b.HasOne("WebApplication4.Models.AgricultureDetail", "AgricultureDetail")
                        .WithMany("AgricultureProductQuantities")
                        .HasForeignKey("AgricultureDetailId");

                    b.Navigation("AgricultureDetail");
                });

            modelBuilder.Entity("WebApplication4.Models.Airport", b =>
                {
                    b.HasOne("WebApplication4.Models.LocalLevel", "LocalLevel")
                        .WithMany("Airports")
                        .HasForeignKey("LocalLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.Ward", "Ward")
                        .WithMany("Airports")
                        .HasForeignKey("WardId");

                    b.Navigation("LocalLevel");

                    b.Navigation("Ward");
                });

            modelBuilder.Entity("WebApplication4.Models.Atm", b =>
                {
                    b.HasOne("WebApplication4.Models.LocalLevel", "LocalLevel")
                        .WithMany("Atms")
                        .HasForeignKey("LocalLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.Ward", "Ward")
                        .WithMany("Atms")
                        .HasForeignKey("WardId");

                    b.Navigation("LocalLevel");

                    b.Navigation("Ward");
                });

            modelBuilder.Entity("WebApplication4.Models.BalBibaha", b =>
                {
                    b.HasOne("WebApplication4.Models.HouseOwnerDetail", "HouseOwnerDetail")
                        .WithMany("BalBibahas")
                        .HasForeignKey("HouseOwnerDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HouseOwnerDetail");
                });

            modelBuilder.Entity("WebApplication4.Models.BloodBank", b =>
                {
                    b.HasOne("WebApplication4.Models.LocalLevel", "LocalLevel")
                        .WithMany("BloodBanks")
                        .HasForeignKey("LocalLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.Ward", "Ward")
                        .WithMany("BloodBanks")
                        .HasForeignKey("WardId");

                    b.Navigation("LocalLevel");

                    b.Navigation("Ward");
                });

            modelBuilder.Entity("WebApplication4.Models.Designation", b =>
                {
                    b.HasOne("WebApplication4.Models.Department", "Department")
                        .WithMany("Designations")
                        .HasForeignKey("DepartmentId");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("WebApplication4.Models.District", b =>
                {
                    b.HasOne("WebApplication4.Models.State", "State")
                        .WithMany("Districts")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("State");
                });

            modelBuilder.Entity("WebApplication4.Models.DistrictDetail", b =>
                {
                    b.HasOne("WebApplication4.Models.District", "Dist")
                        .WithMany("DistrictDetails")
                        .HasForeignKey("DistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dist");
                });

            modelBuilder.Entity("WebApplication4.Models.EconomicDetail", b =>
                {
                    b.HasOne("WebApplication4.Models.AverageMonthlyIncome", "AverageMonthlyIncome")
                        .WithMany("EconomicDetails")
                        .HasForeignKey("AverageMonthlyIncomeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.FoodCondition", "FoodCondition")
                        .WithMany("EconomicDetails")
                        .HasForeignKey("FoodConditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.HouseOwnerDetail", "HouseOwnerDetail")
                        .WithMany("EconomicDetails")
                        .HasForeignKey("HouseOwnerDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AverageMonthlyIncome");

                    b.Navigation("FoodCondition");

                    b.Navigation("HouseOwnerDetail");
                });

            modelBuilder.Entity("WebApplication4.Models.EconomicDetailTechnicalSkillGroup", b =>
                {
                    b.HasOne("WebApplication4.Models.EconomicDetail", "EconomicDetail")
                        .WithMany("EconomicDetailTechnicalSkillGroups")
                        .HasForeignKey("EconomicDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.TechnicalSkill", "TechnicalSkill")
                        .WithMany("EconomicDetailTechnicalSkillGroups")
                        .HasForeignKey("TechnicalSkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EconomicDetail");

                    b.Navigation("TechnicalSkill");
                });

            modelBuilder.Entity("WebApplication4.Models.EducationDetail", b =>
                {
                    b.HasOne("WebApplication4.Models.HouseOwnerDetail", "HouseOwnerDetail")
                        .WithMany("EducationDetails")
                        .HasForeignKey("HouseOwnerDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.WhereAreTheyNow", "WhereAreTheyNow")
                        .WithMany("EducationDetails")
                        .HasForeignKey("WhereAreTheyNowId");

                    b.Navigation("HouseOwnerDetail");

                    b.Navigation("WhereAreTheyNow");
                });

            modelBuilder.Entity("WebApplication4.Models.EducationDetailSchoolGroup", b =>
                {
                    b.HasOne("WebApplication4.Models.EducationDetail", "Education")
                        .WithMany("EducationDetailSchoolGroups")
                        .HasForeignKey("EducationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.SchoolLayer", "SchoolLayer")
                        .WithMany("EducationDetailSchoolGroups")
                        .HasForeignKey("SchoolLayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.SchoolTime", "SchoolTime")
                        .WithMany("EducationDetailSchoolGroups")
                        .HasForeignKey("SchoolTimeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Education");

                    b.Navigation("SchoolLayer");

                    b.Navigation("SchoolTime");
                });

            modelBuilder.Entity("WebApplication4.Models.EducationEducationalLevelGroup", b =>
                {
                    b.HasOne("WebApplication4.Models.EducationDetail", "Education")
                        .WithMany("EducationEducationalLevelGroups")
                        .HasForeignKey("EducationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.EducationalLevel", "EducationalLevel")
                        .WithMany("EducationEducationalLevelGroups")
                        .HasForeignKey("EducationalLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Education");

                    b.Navigation("EducationalLevel");
                });

            modelBuilder.Entity("WebApplication4.Models.Employee", b =>
                {
                    b.HasOne("WebApplication4.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.Designation", "Designation")
                        .WithMany("Employees")
                        .HasForeignKey("DesignationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.LocalLevel", "LocalLevel")
                        .WithMany("Employees")
                        .HasForeignKey("LocalLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.Ward", "Ward")
                        .WithMany("Employees")
                        .HasForeignKey("WardId");

                    b.Navigation("Department");

                    b.Navigation("Designation");

                    b.Navigation("LocalLevel");

                    b.Navigation("Ward");
                });

            modelBuilder.Entity("WebApplication4.Models.GharMuliChildDetail", b =>
                {
                    b.HasOne("WebApplication4.Models.HouseOwnerDetail", "GharMuli")
                        .WithMany("GharMuliChildDetails")
                        .HasForeignKey("GharMuliId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GharMuli");
                });

            modelBuilder.Entity("WebApplication4.Models.GharMuliDetail", b =>
                {
                    b.HasOne("WebApplication4.Models.Caste", "Caste")
                        .WithMany("GharMuliDetails")
                        .HasForeignKey("CasteId");

                    b.HasOne("WebApplication4.Models.Gender", "Gender")
                        .WithMany("GharMuliDetails")
                        .HasForeignKey("GenderId");

                    b.HasOne("WebApplication4.Models.Language", "Language")
                        .WithMany("GharMuliDetails")
                        .HasForeignKey("LanguageId");

                    b.HasOne("WebApplication4.Models.Religion", "Religion")
                        .WithMany("GharMuliDetails")
                        .HasForeignKey("ReligionId");

                    b.HasOne("WebApplication4.Models.Ward", "Ward")
                        .WithMany("GharMuliDetails")
                        .HasForeignKey("WardId");

                    b.Navigation("Caste");

                    b.Navigation("Gender");

                    b.Navigation("Language");

                    b.Navigation("Religion");

                    b.Navigation("Ward");
                });

            modelBuilder.Entity("WebApplication4.Models.GharMuliEconomicStatus", b =>
                {
                    b.HasOne("WebApplication4.Models.GharMuliDetail", "GharMuli")
                        .WithMany("GharMuliEconomicStatuses")
                        .HasForeignKey("GharMuliId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GharMuli");
                });

            modelBuilder.Entity("WebApplication4.Models.GharMuliFamilyDetail", b =>
                {
                    b.HasOne("WebApplication4.Models.EducationalLevel", "EducationLevel")
                        .WithMany("GharMuliFamilyDetails")
                        .HasForeignKey("EducationLevelId");

                    b.HasOne("WebApplication4.Models.GharMuliDetail", "GharMuli")
                        .WithMany("GharMuliFamilyDetails")
                        .HasForeignKey("GharMuliId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EducationLevel");

                    b.Navigation("GharMuli");
                });

            modelBuilder.Entity("WebApplication4.Models.GharMuliFamilyMarrageDetail", b =>
                {
                    b.HasOne("WebApplication4.Models.Gender", "Gender")
                        .WithMany("GharMuliFamilyMarrageDetails")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.HouseOwnerDetail", "GharMuli")
                        .WithMany("GharMuliFamilyMarrageDetails")
                        .HasForeignKey("GharMuliId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gender");

                    b.Navigation("GharMuli");
                });

            modelBuilder.Entity("WebApplication4.Models.GharMuliHealthDetail", b =>
                {
                    b.HasOne("WebApplication4.Models.GharMuliDetail", "GharMuli")
                        .WithMany("GharMuliHealthDetails")
                        .HasForeignKey("GharMuliId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GharMuli");
                });

            modelBuilder.Entity("WebApplication4.Models.GharMuliKhanePaniAndAawasDetail", b =>
                {
                    b.HasOne("WebApplication4.Models.GharMuliDetail", "GharMuli")
                        .WithMany("GharMuliKhanePaniAndAawasDetails")
                        .HasForeignKey("GharMuliId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GharMuli");
                });

            modelBuilder.Entity("WebApplication4.Models.HealthDetail", b =>
                {
                    b.HasOne("WebApplication4.Models.HouseOwnerDetail", "HouseOwnerDetail")
                        .WithMany("HealthDetails")
                        .HasForeignKey("HouseOwnerDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HouseOwnerDetail");
                });

            modelBuilder.Entity("WebApplication4.Models.HealthDetailChronicDiseaseGroup", b =>
                {
                    b.HasOne("WebApplication4.Models.ChronicDisease", "ChronicDisease")
                        .WithMany("HealthDetailChronicDiseaseGroups")
                        .HasForeignKey("ChronicDiseaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.HealthDetail", "HealthDetailI")
                        .WithMany("HealthDetailChronicDiseaseGroups")
                        .HasForeignKey("HealthDetailIid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChronicDisease");

                    b.Navigation("HealthDetailI");
                });

            modelBuilder.Entity("WebApplication4.Models.HealthDetailDisabilityCardGroup", b =>
                {
                    b.HasOne("WebApplication4.Models.DisabilityCard", "DisabilityCard")
                        .WithMany("HealthDetailDisabilityCardGroups")
                        .HasForeignKey("DisabilityCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.HealthDetail", "HealthDetail")
                        .WithMany("HealthDetailDisabilityCardGroups")
                        .HasForeignKey("HealthDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DisabilityCard");

                    b.Navigation("HealthDetail");
                });

            modelBuilder.Entity("WebApplication4.Models.HealthDetailDisabilityReasonGroup", b =>
                {
                    b.HasOne("WebApplication4.Models.DisabilityReason", "DisabilityReason")
                        .WithMany("HealthDetailDisabilityReasonGroups")
                        .HasForeignKey("DisabilityReasonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.HealthDetail", "HealthDetail")
                        .WithMany("HealthDetailDisabilityReasonGroups")
                        .HasForeignKey("HealthDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DisabilityReason");

                    b.Navigation("HealthDetail");
                });

            modelBuilder.Entity("WebApplication4.Models.HealthDetailDisabilityTypeGroup", b =>
                {
                    b.HasOne("WebApplication4.Models.DisabilityType", "DisabilityType")
                        .WithMany("HealthDetailDisabilityTypeGroups")
                        .HasForeignKey("DisabilityTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.HealthDetail", "HealthDetail")
                        .WithMany("HealthDetailDisabilityTypeGroups")
                        .HasForeignKey("HealthDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DisabilityType");

                    b.Navigation("HealthDetail");
                });

            modelBuilder.Entity("WebApplication4.Models.HealthFacility", b =>
                {
                    b.HasOne("WebApplication4.Models.LocalLevel", "LocalLevel")
                        .WithMany("HealthFacilities")
                        .HasForeignKey("LocalLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.Ward", "Ward")
                        .WithMany("HealthFacilities")
                        .HasForeignKey("WardId");

                    b.Navigation("LocalLevel");

                    b.Navigation("Ward");
                });

            modelBuilder.Entity("WebApplication4.Models.HistoricPlace", b =>
                {
                    b.HasOne("WebApplication4.Models.LocalLevel", "LocalLevel")
                        .WithMany("HistoricPlaces")
                        .HasForeignKey("LocalLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LocalLevel");
                });

            modelBuilder.Entity("WebApplication4.Models.Hotel", b =>
                {
                    b.HasOne("WebApplication4.Models.LocalLevel", "LocalLevel")
                        .WithMany("Hotels")
                        .HasForeignKey("LocalLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.Ward", "Ward")
                        .WithMany("Hotels")
                        .HasForeignKey("WardId");

                    b.Navigation("LocalLevel");

                    b.Navigation("Ward");
                });

            modelBuilder.Entity("WebApplication4.Models.HouseDetail", b =>
                {
                    b.HasOne("WebApplication4.Models.HouseFloor", "HouseFloor")
                        .WithMany("HouseDetails")
                        .HasForeignKey("HouseFloorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.HouseMapDetail", "HouseMap")
                        .WithMany("HouseDetails")
                        .HasForeignKey("HouseMapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.HouseOwnerDetail", "HouseOwnerDetail")
                        .WithMany("HouseDetails")
                        .HasForeignKey("HouseOwnerDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.HouseOwnership", "HouseOwnership")
                        .WithMany("HouseDetails")
                        .HasForeignKey("HouseOwnershipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.HouseRoof", "HouseRoof")
                        .WithMany("HouseDetails")
                        .HasForeignKey("HouseRoofId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HouseFloor");

                    b.Navigation("HouseMap");

                    b.Navigation("HouseOwnerDetail");

                    b.Navigation("HouseOwnership");

                    b.Navigation("HouseRoof");
                });

            modelBuilder.Entity("WebApplication4.Models.HouseOwnerAbdhiGroup", b =>
                {
                    b.HasOne("WebApplication4.Models.Abhadhi", "Abhadhi")
                        .WithMany("HouseOwnerAbdhiGroups")
                        .HasForeignKey("AbhadhiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.HouseOwnerDetail", "HouseOwner")
                        .WithMany("HouseOwnerAbdhiGroups")
                        .HasForeignKey("HouseOwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Abhadhi");

                    b.Navigation("HouseOwner");
                });

            modelBuilder.Entity("WebApplication4.Models.HouseOwnerCode", b =>
                {
                    b.HasOne("WebApplication4.Models.HouseOwnerDetail", "HouseOwner")
                        .WithMany("HouseOwnerCodes")
                        .HasForeignKey("HouseOwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.LocalLevel", "LocalLavel")
                        .WithMany("HouseOwnerCodes")
                        .HasForeignKey("LocalLavelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.Ward", "Ward")
                        .WithMany("HouseOwnerCodes")
                        .HasForeignKey("WardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HouseOwner");

                    b.Navigation("LocalLavel");

                    b.Navigation("Ward");
                });

            modelBuilder.Entity("WebApplication4.Models.HouseOwnerCountryGroup", b =>
                {
                    b.HasOne("WebApplication4.Models.Country", "Country")
                        .WithMany("HouseOwnerCountryGroups")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.HouseOwnerDetail", "HouseOwner")
                        .WithMany("HouseOwnerCountryGroups")
                        .HasForeignKey("HouseOwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("HouseOwner");
                });

            modelBuilder.Entity("WebApplication4.Models.HouseOwnerDetail", b =>
                {
                    b.HasOne("WebApplication4.Models.BusinessType", "BusinessType")
                        .WithMany("HouseOwnerDetails")
                        .HasForeignKey("BusinessTypeId");

                    b.HasOne("WebApplication4.Models.Earthquake2072", "Earthquake2072")
                        .WithMany("HouseOwnerDetails")
                        .HasForeignKey("Earthquake2072Id");

                    b.HasOne("WebApplication4.Models.Gender", "Gender")
                        .WithMany("HouseOwnerDetails")
                        .HasForeignKey("GenderId");

                    b.HasOne("WebApplication4.Models.HouseType", "HouseType")
                        .WithMany("HouseOwnerDetails")
                        .HasForeignKey("HouseTypeId");

                    b.HasOne("WebApplication4.Models.LocalLevel", "LocalLevel")
                        .WithMany("HouseOwnerDetails")
                        .HasForeignKey("LocalLevelId");

                    b.HasOne("WebApplication4.Models.NaturalDisaster", "NaturalDisaster")
                        .WithMany("HouseOwnerDetails")
                        .HasForeignKey("NaturalDisasterId");

                    b.HasOne("WebApplication4.Models.SkillType", "SkillType")
                        .WithMany("HouseOwnerDetails")
                        .HasForeignKey("SkillTypeId");

                    b.HasOne("WebApplication4.Models.Vehicle", "Vehicle")
                        .WithMany("HouseOwnerDetails")
                        .HasForeignKey("VehicleId");

                    b.Navigation("BusinessType");

                    b.Navigation("Earthquake2072");

                    b.Navigation("Gender");

                    b.Navigation("HouseType");

                    b.Navigation("LocalLevel");

                    b.Navigation("NaturalDisaster");

                    b.Navigation("SkillType");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("WebApplication4.Models.HouseOwnerFamilyDetail", b =>
                {
                    b.HasOne("WebApplication4.Models.HouseOwnerDetail", "HouseOwnerDetails")
                        .WithMany("HouseOwnerFamilyDetails")
                        .HasForeignKey("HouseOwnerDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HouseOwnerDetails");
                });

            modelBuilder.Entity("WebApplication4.Models.HydroPower", b =>
                {
                    b.HasOne("WebApplication4.Models.LocalLevel", "LocalLevel")
                        .WithMany("HydroPowers")
                        .HasForeignKey("LocalLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.Ward", "Ward")
                        .WithMany("HydroPowers")
                        .HasForeignKey("WardId");

                    b.Navigation("LocalLevel");

                    b.Navigation("Ward");
                });

            modelBuilder.Entity("WebApplication4.Models.Industry", b =>
                {
                    b.HasOne("WebApplication4.Models.Ward", "Ward")
                        .WithMany("Industries")
                        .HasForeignKey("WardId");

                    b.Navigation("Ward");
                });

            modelBuilder.Entity("WebApplication4.Models.Institution", b =>
                {
                    b.HasOne("WebApplication4.Models.Ward", "WardNoNavigation")
                        .WithMany("Institutions")
                        .HasForeignKey("WardNoNavigationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WardNoNavigation");
                });

            modelBuilder.Entity("WebApplication4.Models.JanPratinidhi", b =>
                {
                    b.HasOne("WebApplication4.Models.LocalLevel", "LocalLevel")
                        .WithMany("JanPratinidhis")
                        .HasForeignKey("LocalLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.Ward", "Ward")
                        .WithMany("JanPratinidhis")
                        .HasForeignKey("WardId");

                    b.Navigation("LocalLevel");

                    b.Navigation("Ward");
                });

            modelBuilder.Entity("WebApplication4.Models.KaryalayaSetup", b =>
                {
                    b.HasOne("WebApplication4.Models.District", "District")
                        .WithMany("KaryalayaSetups")
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.LocalLevel", "Palika")
                        .WithMany("KaryalayaSetups")
                        .HasForeignKey("PalikaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.State", "Province")
                        .WithMany("KaryalayaSetups")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("District");

                    b.Navigation("Palika");

                    b.Navigation("Province");
                });

            modelBuilder.Entity("WebApplication4.Models.Lake", b =>
                {
                    b.HasOne("WebApplication4.Models.LocalLevel", "LocalLevel")
                        .WithMany("Lakes")
                        .HasForeignKey("LocalLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.Ward", "Ward")
                        .WithMany("Lakes")
                        .HasForeignKey("WardId");

                    b.Navigation("LocalLevel");

                    b.Navigation("Ward");
                });

            modelBuilder.Entity("WebApplication4.Models.LocalLevel", b =>
                {
                    b.HasOne("WebApplication4.Models.District", "Dist")
                        .WithMany("LocalLevels")
                        .HasForeignKey("DistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dist");
                });

            modelBuilder.Entity("WebApplication4.Models.LocalLevelDetail", b =>
                {
                    b.HasOne("WebApplication4.Models.LocalLevel", "LocalLevel")
                        .WithMany("LocalLevelDetails")
                        .HasForeignKey("LocalLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LocalLevel");
                });

            modelBuilder.Entity("WebApplication4.Models.Ministry", b =>
                {
                    b.HasOne("WebApplication4.Models.State", "State")
                        .WithMany("Ministries")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("State");
                });

            modelBuilder.Entity("WebApplication4.Models.Mountain", b =>
                {
                    b.HasOne("WebApplication4.Models.LocalLevel", "LocalLevel")
                        .WithMany("Mountains")
                        .HasForeignKey("LocalLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.Ward", "Ward")
                        .WithMany("Mountains")
                        .HasForeignKey("WardId");

                    b.Navigation("LocalLevel");

                    b.Navigation("Ward");
                });

            modelBuilder.Entity("WebApplication4.Models.MovedFamilyMemberDetail", b =>
                {
                    b.HasOne("WebApplication4.Models.HouseOwnerDetail", "HouseOwnerDetails")
                        .WithMany("MovedFamilyMemberDetails")
                        .HasForeignKey("HouseOwnerDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HouseOwnerDetails");
                });

            modelBuilder.Entity("WebApplication4.Models.MultisectoralNutritionAndExtension", b =>
                {
                    b.HasOne("WebApplication4.Models.HouseOwnerDetail", "HouseOwnerDetail")
                        .WithMany("MultisectoralNutritionAndExtensions")
                        .HasForeignKey("HouseOwnerDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HouseOwnerDetail");
                });

            modelBuilder.Entity("WebApplication4.Models.NagarikWadaPatra", b =>
                {
                    b.HasOne("WebApplication4.Models.LocalLevel", "LocalLevel")
                        .WithMany("NagarikWadaPatras")
                        .HasForeignKey("LocalLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LocalLevel");
                });

            modelBuilder.Entity("WebApplication4.Models.NagarikWadaPatraDoc", b =>
                {
                    b.HasOne("WebApplication4.Models.NagarikWadaPatra", "NagarikWadaPatra")
                        .WithMany("NagarikWadaPatraDocs")
                        .HasForeignKey("NagarikWadaPatraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NagarikWadaPatra");
                });

            modelBuilder.Entity("WebApplication4.Models.Notice", b =>
                {
                    b.HasOne("WebApplication4.Models.LocalLevel", "LocalLevel")
                        .WithMany("Notices")
                        .HasForeignKey("LocalLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LocalLevel");
                });

            modelBuilder.Entity("WebApplication4.Models.PoliceStation", b =>
                {
                    b.HasOne("WebApplication4.Models.LocalLevel", "LocalLevel")
                        .WithMany("PoliceStations")
                        .HasForeignKey("LocalLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.Ward", "Ward")
                        .WithMany("PoliceStations")
                        .HasForeignKey("WardId");

                    b.Navigation("LocalLevel");

                    b.Navigation("Ward");
                });

            modelBuilder.Entity("WebApplication4.Models.PopulationDetail", b =>
                {
                    b.HasOne("WebApplication4.Models.Language", "Language")
                        .WithMany("PopulationDetails")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.Religion", "Religion")
                        .WithMany("PopulationDetails")
                        .HasForeignKey("ReligionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("Religion");
                });

            modelBuilder.Entity("WebApplication4.Models.PopulationDetailAgeGroup", b =>
                {
                    b.HasOne("WebApplication4.Models.AgeGroup", "AgeGroup")
                        .WithMany("PopulationDetailAgeGroups")
                        .HasForeignKey("AgeGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.PopulationDetail", "PopulationDetail")
                        .WithMany("PopulationDetailAgeGroups")
                        .HasForeignKey("PopulationDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AgeGroup");

                    b.Navigation("PopulationDetail");
                });

            modelBuilder.Entity("WebApplication4.Models.PopulationDetailCasteGroup", b =>
                {
                    b.HasOne("WebApplication4.Models.Caste", "Caste")
                        .WithMany("PopulationDetailCasteGroups")
                        .HasForeignKey("CasteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.PopulationDetail", "Population")
                        .WithMany("PopulationDetailCasteGroups")
                        .HasForeignKey("PopulationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Caste");

                    b.Navigation("Population");
                });

            modelBuilder.Entity("WebApplication4.Models.PopulationDetailOccupationGroup", b =>
                {
                    b.HasOne("WebApplication4.Models.OccupationDetail", "OccupationDetail")
                        .WithMany("PopulationDetailOccupationGroups")
                        .HasForeignKey("OccupationDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.PopulationDetail", "PopulationDetail")
                        .WithMany("PopulationDetailOccupationGroups")
                        .HasForeignKey("PopulationDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OccupationDetail");

                    b.Navigation("PopulationDetail");
                });

            modelBuilder.Entity("WebApplication4.Models.PregnancyDetail", b =>
                {
                    b.HasOne("WebApplication4.Models.HouseOwnerDetail", "GharMuli")
                        .WithMany("PregnancyDetails")
                        .HasForeignKey("GharMuliId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GharMuli");
                });

            modelBuilder.Entity("WebApplication4.Models.Project", b =>
                {
                    b.HasOne("WebApplication4.Models.LocalLevel", "LocalLevel")
                        .WithMany("Projects")
                        .HasForeignKey("LocalLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.Ward", "Ward")
                        .WithMany("Projects")
                        .HasForeignKey("WardId");

                    b.Navigation("LocalLevel");

                    b.Navigation("Ward");
                });

            modelBuilder.Entity("WebApplication4.Models.ProtectedArea", b =>
                {
                    b.HasOne("WebApplication4.Models.LocalLevel", "LocalLevel")
                        .WithMany("ProtectedAreas")
                        .HasForeignKey("LocalLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.Ward", "Ward")
                        .WithMany("ProtectedAreas")
                        .HasForeignKey("WardId");

                    b.Navigation("LocalLevel");

                    b.Navigation("Ward");
                });

            modelBuilder.Entity("WebApplication4.Models.Sikshya", b =>
                {
                    b.HasOne("WebApplication4.Models.District", "District")
                        .WithMany("Sikshyas")
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.LocalLevel", "LocalLevel")
                        .WithMany("Sikshyas")
                        .HasForeignKey("LocalLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.State", "State")
                        .WithMany("Sikshyas")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.Ward", "Ward")
                        .WithMany("Sikshyas")
                        .HasForeignKey("WardId");

                    b.Navigation("District");

                    b.Navigation("LocalLevel");

                    b.Navigation("State");

                    b.Navigation("Ward");
                });

            modelBuilder.Entity("WebApplication4.Models.SleepMotherDetail", b =>
                {
                    b.HasOne("WebApplication4.Models.HouseOwnerDetail", "GharMuli")
                        .WithMany("SleepMotherDetails")
                        .HasForeignKey("GharMuliId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GharMuli");
                });

            modelBuilder.Entity("WebApplication4.Models.StateDetail", b =>
                {
                    b.HasOne("WebApplication4.Models.State", "State")
                        .WithMany("StateDetails")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("State");
                });

            modelBuilder.Entity("WebApplication4.Models.UserDetail", b =>
                {
                    b.HasOne("WebApplication4.Models.District", "District")
                        .WithMany("UserDetails")
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.LocalLevel", "LocalLevelNavigation")
                        .WithMany("UserDetails")
                        .HasForeignKey("LocalLevelNavigationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.State", "State")
                        .WithMany("UserDetails")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.Ward", "Ward")
                        .WithMany("UserDetails")
                        .HasForeignKey("WardId");

                    b.Navigation("District");

                    b.Navigation("LocalLevelNavigation");

                    b.Navigation("State");

                    b.Navigation("Ward");
                });

            modelBuilder.Entity("WebApplication4.Models.Ward", b =>
                {
                    b.HasOne("WebApplication4.Models.LocalLevel", "LocalLevel")
                        .WithMany("Wards")
                        .HasForeignKey("LocalLevelId");

                    b.Navigation("LocalLevel");
                });

            modelBuilder.Entity("WebApplication4.Models.WardDetail", b =>
                {
                    b.HasOne("WebApplication4.Models.Ward", "Ward")
                        .WithMany("WardDetails")
                        .HasForeignKey("WardId");

                    b.Navigation("Ward");
                });

            modelBuilder.Entity("WebApplication4.Models.WaterFall", b =>
                {
                    b.HasOne("WebApplication4.Models.LocalLevel", "LocalLevel")
                        .WithMany("WaterFalls")
                        .HasForeignKey("LocalLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.Ward", "Ward")
                        .WithMany("WaterFalls")
                        .HasForeignKey("WardId");

                    b.Navigation("LocalLevel");

                    b.Navigation("Ward");
                });

            modelBuilder.Entity("WebApplication4.Models.WhereAreTheyNowDetail", b =>
                {
                    b.HasOne("WebApplication4.Models.HouseOwnerDetail", "HouseOwnerDetails")
                        .WithMany("WhereAreTheyNowDetails")
                        .HasForeignKey("HouseOwnerDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.WhereAreTheyNow", "WhereAreTheyNow")
                        .WithMany("WhereAreTheyNowDetails")
                        .HasForeignKey("WhereAreTheyNowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HouseOwnerDetails");

                    b.Navigation("WhereAreTheyNow");
                });

            modelBuilder.Entity("WebApplication4.Models.Abhadhi", b =>
                {
                    b.Navigation("HouseOwnerAbdhiGroups");
                });

            modelBuilder.Entity("WebApplication4.Models.AgeGroup", b =>
                {
                    b.Navigation("PopulationDetailAgeGroups");
                });

            modelBuilder.Entity("WebApplication4.Models.AgricultureDetail", b =>
                {
                    b.Navigation("AgricultureDetailAnimalGroups");

                    b.Navigation("AgriculturePasuPanchiDetails");

                    b.Navigation("AgricultureProductDetails");

                    b.Navigation("AgricultureProductQuantities");
                });

            modelBuilder.Entity("WebApplication4.Models.Animal", b =>
                {
                    b.Navigation("AgricultureDetailAnimalGroups");
                });

            modelBuilder.Entity("WebApplication4.Models.AverageMonthlyIncome", b =>
                {
                    b.Navigation("EconomicDetails");
                });

            modelBuilder.Entity("WebApplication4.Models.BusinessType", b =>
                {
                    b.Navigation("HouseOwnerDetails");
                });

            modelBuilder.Entity("WebApplication4.Models.Caste", b =>
                {
                    b.Navigation("GharMuliDetails");

                    b.Navigation("PopulationDetailCasteGroups");
                });

            modelBuilder.Entity("WebApplication4.Models.ChronicDisease", b =>
                {
                    b.Navigation("HealthDetailChronicDiseaseGroups");
                });

            modelBuilder.Entity("WebApplication4.Models.Country", b =>
                {
                    b.Navigation("HouseOwnerCountryGroups");
                });

            modelBuilder.Entity("WebApplication4.Models.Department", b =>
                {
                    b.Navigation("Designations");

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("WebApplication4.Models.Designation", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("WebApplication4.Models.DisabilityCard", b =>
                {
                    b.Navigation("HealthDetailDisabilityCardGroups");
                });

            modelBuilder.Entity("WebApplication4.Models.DisabilityReason", b =>
                {
                    b.Navigation("HealthDetailDisabilityReasonGroups");
                });

            modelBuilder.Entity("WebApplication4.Models.DisabilityType", b =>
                {
                    b.Navigation("HealthDetailDisabilityTypeGroups");
                });

            modelBuilder.Entity("WebApplication4.Models.District", b =>
                {
                    b.Navigation("DistrictDetails");

                    b.Navigation("KaryalayaSetups");

                    b.Navigation("LocalLevels");

                    b.Navigation("Sikshyas");

                    b.Navigation("UserDetails");
                });

            modelBuilder.Entity("WebApplication4.Models.Earthquake2072", b =>
                {
                    b.Navigation("HouseOwnerDetails");
                });

            modelBuilder.Entity("WebApplication4.Models.EconomicDetail", b =>
                {
                    b.Navigation("EconomicDetailTechnicalSkillGroups");
                });

            modelBuilder.Entity("WebApplication4.Models.EducationDetail", b =>
                {
                    b.Navigation("EducationDetailSchoolGroups");

                    b.Navigation("EducationEducationalLevelGroups");
                });

            modelBuilder.Entity("WebApplication4.Models.EducationalLevel", b =>
                {
                    b.Navigation("EducationEducationalLevelGroups");

                    b.Navigation("GharMuliFamilyDetails");
                });

            modelBuilder.Entity("WebApplication4.Models.FoodCondition", b =>
                {
                    b.Navigation("EconomicDetails");
                });

            modelBuilder.Entity("WebApplication4.Models.Gender", b =>
                {
                    b.Navigation("GharMuliDetails");

                    b.Navigation("GharMuliFamilyMarrageDetails");

                    b.Navigation("HouseOwnerDetails");
                });

            modelBuilder.Entity("WebApplication4.Models.GharMuliDetail", b =>
                {
                    b.Navigation("GharMuliEconomicStatuses");

                    b.Navigation("GharMuliFamilyDetails");

                    b.Navigation("GharMuliHealthDetails");

                    b.Navigation("GharMuliKhanePaniAndAawasDetails");
                });

            modelBuilder.Entity("WebApplication4.Models.HealthDetail", b =>
                {
                    b.Navigation("HealthDetailChronicDiseaseGroups");

                    b.Navigation("HealthDetailDisabilityCardGroups");

                    b.Navigation("HealthDetailDisabilityReasonGroups");

                    b.Navigation("HealthDetailDisabilityTypeGroups");
                });

            modelBuilder.Entity("WebApplication4.Models.HouseFloor", b =>
                {
                    b.Navigation("HouseDetails");
                });

            modelBuilder.Entity("WebApplication4.Models.HouseMapDetail", b =>
                {
                    b.Navigation("HouseDetails");
                });

            modelBuilder.Entity("WebApplication4.Models.HouseOwnerDetail", b =>
                {
                    b.Navigation("AgricultureDetails");

                    b.Navigation("BalBibahas");

                    b.Navigation("EconomicDetails");

                    b.Navigation("EducationDetails");

                    b.Navigation("GharMuliChildDetails");

                    b.Navigation("GharMuliFamilyMarrageDetails");

                    b.Navigation("HealthDetails");

                    b.Navigation("HouseDetails");

                    b.Navigation("HouseOwnerAbdhiGroups");

                    b.Navigation("HouseOwnerCodes");

                    b.Navigation("HouseOwnerCountryGroups");

                    b.Navigation("HouseOwnerFamilyDetails");

                    b.Navigation("MovedFamilyMemberDetails");

                    b.Navigation("MultisectoralNutritionAndExtensions");

                    b.Navigation("PregnancyDetails");

                    b.Navigation("SleepMotherDetails");

                    b.Navigation("WhereAreTheyNowDetails");
                });

            modelBuilder.Entity("WebApplication4.Models.HouseOwnership", b =>
                {
                    b.Navigation("HouseDetails");
                });

            modelBuilder.Entity("WebApplication4.Models.HouseRoof", b =>
                {
                    b.Navigation("HouseDetails");
                });

            modelBuilder.Entity("WebApplication4.Models.HouseType", b =>
                {
                    b.Navigation("HouseOwnerDetails");
                });

            modelBuilder.Entity("WebApplication4.Models.Language", b =>
                {
                    b.Navigation("GharMuliDetails");

                    b.Navigation("PopulationDetails");
                });

            modelBuilder.Entity("WebApplication4.Models.LocalLevel", b =>
                {
                    b.Navigation("Airports");

                    b.Navigation("Atms");

                    b.Navigation("BloodBanks");

                    b.Navigation("Employees");

                    b.Navigation("HealthFacilities");

                    b.Navigation("HistoricPlaces");

                    b.Navigation("Hotels");

                    b.Navigation("HouseOwnerCodes");

                    b.Navigation("HouseOwnerDetails");

                    b.Navigation("HydroPowers");

                    b.Navigation("JanPratinidhis");

                    b.Navigation("KaryalayaSetups");

                    b.Navigation("Lakes");

                    b.Navigation("LocalLevelDetails");

                    b.Navigation("Mountains");

                    b.Navigation("NagarikWadaPatras");

                    b.Navigation("Notices");

                    b.Navigation("PoliceStations");

                    b.Navigation("Projects");

                    b.Navigation("ProtectedAreas");

                    b.Navigation("Sikshyas");

                    b.Navigation("UserDetails");

                    b.Navigation("Wards");

                    b.Navigation("WaterFalls");
                });

            modelBuilder.Entity("WebApplication4.Models.NagarikWadaPatra", b =>
                {
                    b.Navigation("NagarikWadaPatraDocs");
                });

            modelBuilder.Entity("WebApplication4.Models.NaturalDisaster", b =>
                {
                    b.Navigation("HouseOwnerDetails");
                });

            modelBuilder.Entity("WebApplication4.Models.OccupationDetail", b =>
                {
                    b.Navigation("PopulationDetailOccupationGroups");
                });

            modelBuilder.Entity("WebApplication4.Models.PopulationDetail", b =>
                {
                    b.Navigation("PopulationDetailAgeGroups");

                    b.Navigation("PopulationDetailCasteGroups");

                    b.Navigation("PopulationDetailOccupationGroups");
                });

            modelBuilder.Entity("WebApplication4.Models.Religion", b =>
                {
                    b.Navigation("GharMuliDetails");

                    b.Navigation("PopulationDetails");
                });

            modelBuilder.Entity("WebApplication4.Models.SchoolLayer", b =>
                {
                    b.Navigation("EducationDetailSchoolGroups");
                });

            modelBuilder.Entity("WebApplication4.Models.SchoolTime", b =>
                {
                    b.Navigation("EducationDetailSchoolGroups");
                });

            modelBuilder.Entity("WebApplication4.Models.SkillType", b =>
                {
                    b.Navigation("HouseOwnerDetails");
                });

            modelBuilder.Entity("WebApplication4.Models.State", b =>
                {
                    b.Navigation("Districts");

                    b.Navigation("KaryalayaSetups");

                    b.Navigation("Ministries");

                    b.Navigation("Sikshyas");

                    b.Navigation("StateDetails");

                    b.Navigation("UserDetails");
                });

            modelBuilder.Entity("WebApplication4.Models.TechnicalSkill", b =>
                {
                    b.Navigation("EconomicDetailTechnicalSkillGroups");
                });

            modelBuilder.Entity("WebApplication4.Models.Vehicle", b =>
                {
                    b.Navigation("HouseOwnerDetails");
                });

            modelBuilder.Entity("WebApplication4.Models.Ward", b =>
                {
                    b.Navigation("Airports");

                    b.Navigation("Atms");

                    b.Navigation("BloodBanks");

                    b.Navigation("Employees");

                    b.Navigation("GharMuliDetails");

                    b.Navigation("HealthFacilities");

                    b.Navigation("Hotels");

                    b.Navigation("HouseOwnerCodes");

                    b.Navigation("HydroPowers");

                    b.Navigation("Industries");

                    b.Navigation("Institutions");

                    b.Navigation("JanPratinidhis");

                    b.Navigation("Lakes");

                    b.Navigation("Mountains");

                    b.Navigation("PoliceStations");

                    b.Navigation("Projects");

                    b.Navigation("ProtectedAreas");

                    b.Navigation("Sikshyas");

                    b.Navigation("UserDetails");

                    b.Navigation("WardDetails");

                    b.Navigation("WaterFalls");
                });

            modelBuilder.Entity("WebApplication4.Models.WhereAreTheyNow", b =>
                {
                    b.Navigation("EducationDetails");

                    b.Navigation("WhereAreTheyNowDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
